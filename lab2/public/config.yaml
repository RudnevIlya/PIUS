openapi: 3.0.0
info:
  description: OpenAPI & Swagger UI
  version: '1.0.1'
  title: Hollywood
tags:
- name: actors
  description: Actions with actors
- name: films
  description: Actions with films
- name: casts
  description: Actions with casts
paths:
  /api/v1/actors/{id}:
    get:
      tags:
      - actors
      summary: Info about one actor
      description: Return actor
      operationId: getActor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    delete:
      tags:
      - actors
      summary: Delete actor
      description: Deletes actor
      operationId: deleteActor
      parameters:
        - in: path
          name: id
          description: Id actor for delete
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    put: 
      tags:
      - actors
      summary: Update all fields one actor 
      description: Update actor
      operationId: ReplaceActor
      parameters:
        - in: path
          name: id
          description: Id actor for update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    patch:
      tags:
      - actors
      summary: Update some fields one actor
      description: Update some actor fields
      operationId: patchActor
      parameters:
        - in: path
          name: id
          description: Id actor to patch
          required: true
          schema:
            type: integer
        - in: query
          name: full_name
          schema:
            type: string
        - in: query
          name: height
          schema:
            type: integer
        - in: query
          name: birthdate
          schema:
            type: string
            format: date
            nullable: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
  /api/v1/actors:
    post:
      tags:
      - actors
      summary: Create actor
      description: Create actor
      operationId: CreateActor
      requestBody:
        description: Actor data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
                
  /api/v1/films/{id}:
    get:
      tags:
      - films
      summary: Info about one film
      description: Return film
      operationId: getFilm
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    delete:
      tags:
      - films
      summary: Delete film
      description: Deletes film
      operationId: deleteFilm
      parameters:
        - in: path
          name: id
          description: Id film for delete
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    put: 
      tags:
      - films
      summary: Update all fields one film 
      description: Update film
      operationId: ReplaceFilm
      parameters:
        - in: path
          name: id
          description: Id film for update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    patch:
      tags:
      - films
      summary: Update some fields one film
      description: Update some film fields
      operationId: patchFilm
      parameters:
        - in: path
          name: id
          description: Id film to patch
          required: true
          schema:
            type: integer
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: duration
          schema:
            type: integer
        - in: query
          name: rate
          schema:
            type: number
        - in: query
          name: premiere_date
          schema:
            type: string
            format: date
            nullable: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
  /api/v1/films:
    post:
      tags:
      - films
      summary: Create film
      description: Creates film
      operationId: CreateFilm
      requestBody:
        description: Film data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'       

  /api/v1/casts/{id}:
    get:
      tags:
      - casts
      summary: Info about one cast
      description: Return cast
      operationId: getCast
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    delete:
      tags:
      - casts
      summary: Delete cast
      description: Deletes cast
      operationId: deleteCast
      parameters:
        - in: path
          name: id
          description: Id film for delete
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    put: 
      tags:
      - casts
      summary: Update all fields one cast
      description: Update cast
      operationId: ReplaceCast
      parameters:
        - in: path
          name: id
          description: Id cast for update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cast'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
    patch:
      tags:
      - casts
      summary: Update some fields one cast
      description: Update some cast fields
      operationId: patchCast
      parameters:
        - in: path
          name: id
          description: Id cast to patch
          required: true
          schema:
            type: integer
        - in: query
          name: id_film
          schema:
            type: integer
        - in: query
          name: id_actor
          schema:
            type: integer
        - in: query
          name: role
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
  /api/v1/casts:
    post:
      tags:
      - casts
      summary: Create cast
      description: Creates cast
      operationId: CreateCast
      requestBody:
        description: Cast data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cast'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyResponse'       

components:
  schemas: 
    Actor:
      type: object
      properties:
        id: 
          type: integer
        full_name:
          type: string
        height:
          type: integer
        birthdate:
          type: string
          format: date
          nullable: true
    Film:
      type: object
      properties:
        id: 
          type: integer
        title:
          type: string
        duration:
          type: integer
        rate:
          type: number
          nullable: true
        premiere_date:
          type: string
          format: date
          nullable: true
    Cast:
      type: object
      properties:
        id: 
          type: integer
        id_film:
          type: integer
        id_actor:
          type: integer
        role:
          type: string
          nullable: true
    MyResponse:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - type: object
              nullable: true
            - type: array
              items:
                type: object
        errors:
          type: array
          items:
            type: object
            required: 
              - code
              - message
            properties:
              code:
                $ref: '#/components/schemas/ErrorCodes'
              message:
                type: string
              meta:
                type: object
        meta: 
          type: object
    ErrorCodes:
      type: string
      enum:
        - '200'
        - '201'
        - '401'
        - '403'
        - '404'
        - '400'
        - '500'